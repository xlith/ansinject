[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ansinject"
version = "0.2.0"
description = "Inject network security config xml into an Android APK"
readme = "README.md"
authors = [{ name = "Civan Yavuzsen", email = "civanyavuzsen@gmail.com" }]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Operating System :: Android",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Topic :: Security",
    "Topic :: Software Development",
    "Topic :: Software Development :: Bug Tracking",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Disassemblers",
    "Typing :: Typed",

]
keywords = [
    "android",
    "wireshark",
    "injecttion",
    "apk",
    "security",
    "network",
    "config",
    "xml",
]
dependencies = ["typer[all] >= 0.7.0"]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "autopep8",
    "black",
    "build",
    "bumpver",
    "coverage",
    "flake8",
    "isort",
    "mypy",
    "pip-tools",
    "pre-commit",
    "pytest",
    "twine",
]

[project.urls]
Homepage = "https://github.com/xlith/ansinject"

[project.scripts]
ansinject = "ansinject.__main__:main"

[tool.setuptools.packages.find]
where = ["."]

[tool.bumpver]
current_version = "0.2.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"ansinject/__init__.py" = ["{version}"]
